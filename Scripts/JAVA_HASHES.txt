import java.security.MessageDigest;
import java.util.Objects;

import javax.xml.bind.DatatypeConverter;

import java.io.File;
import java.io.PrintWriter;
import java.io.FileNotFoundException;
import java.io.IOException;

import java.io.FileInputStream;

import org.apache.poi.xssf.usermodel.*;


public class Hash {
	//Available algorithms: MD2, MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512
	
	public static String getHash(byte[] inputBytes, String algorithm) {
		String hashValue = "";
		try{
			MessageDigest messageDigest = MessageDigest.getInstance(algorithm);
			messageDigest.update(inputBytes);
			byte[] digestedBytes = messageDigest.digest();
			hashValue = DatatypeConverter.printHexBinary(digestedBytes).toLowerCase();
		}
		catch(Exception e){
		}
		return hashValue;
	
	}
	
	public static void main(String[] args)throws IOException, FileNotFoundException{
	PrintWriter pw = new PrintWriter(new File("OUTPUT_LISTOFHASHES_CSVFILEFORMAT"));
    	StringBuilder sb = new StringBuilder();

	//read image file
	String excelFilePath = "INPUT_LISTOFSTRINGSTOHASH";
	FileInputStream inputStream = new FileInputStream(new File(excelFilePath));

	  
	//load workbook
   	XSSFWorkbook workbook = new XSSFWorkbook(inputStream);
   
    
	//SHEET AAAAA   
    	XSSFSheet sheet0 = workbook.getSheetAt(0);

    	//Number of rows in sheet
    	int n = sheet0.getLastRowNum()+1;
    	//if check is needed to see if empty cell is considered: System.out.println(n);
    	String[] AAAAA = new String[n];
    
    	//output result
    	for(int i=0;i<n;i++){
  	 
	   	XSSFRow row0 = sheet0.getRow(i);
	   	XSSFCell cell0 = row0.getCell(0);
	   	AAAAA[i] = cell0.getStringCellValue();
    
    }

    //SHEET BBBBB
    
    XSSFSheet sheet1 = workbook.getSheetAt(1);
    //Number of rows in sheet
    int m = sheet1.getLastRowNum()+1;
    String[] BBBBB = new String[m];
    
    //output result
    for(int j=0;j<m;j++){
   	 
	   	XSSFRow row1 = sheet1.getRow(j);
	   	XSSFCell cell1 = row1.getCell(0);
	   	BBBBB[j] = cell1.getStringCellValue();
   	
    }
     
    	//SHEET CCCCC
    	XSSFSheet sheet2 = workbook.getSheetAt(2);
    
    	//Number of rows in sheet
    	int p = sheet2.getLastRowNum()+1;
    	String[] CCCCC = new String[p];
    
	//output result
	for(int k=0;k<p;k++){
	   	 
	   	XSSFRow row2 = sheet2.getRow(k);
	   	XSSFCell cell2 = row2.getCell(0);
	   	CCCCC[k] = cell2.getStringCellValue();
	   	
	}
			 for(int x=0;x<n;x++){
				 for(int y=0;y<m;y++){
					 for(int z=0;z<p;z++){
						
						String someString = AAAAA[x] + BBBBB[y] + CCCCC[z];
						String ToCheck = getHash(someString.getBytes(),"SHA-224");
						
						String Comparison = "HASHTOCOMPARE";
						
							if (Objects.equals(ToCheck, Comparison)){
								
								sb.append(ToCheck);
								sb.append("|");
								sb.append(someString);
								sb.append(System.getProperty("line.separator"));
							}

					 }		 
				 }
				 System.out.println(x);
			 }
				 
			pw.write(sb.toString());
			pw.close();
			System.out.println("done!");		
	

	}
	
	
}
